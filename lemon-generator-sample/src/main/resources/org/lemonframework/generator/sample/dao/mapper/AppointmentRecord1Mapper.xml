<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lemonframework.generator.sample.dao.mapper.AppointmentRecord1Mapper">
  <resultMap id="BaseResultMap" type="org.lemonframework.generator.sample.dao.model.AppointmentRecord1">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="weahan_code" jdbcType="VARCHAR" property="weahanCode" />
    <result column="organization_root_id" jdbcType="BIGINT" property="organizationRootId" />
    <result column="client_id" jdbcType="INTEGER" property="clientId" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="patient_id" jdbcType="BIGINT" property="patientId" />
    <result column="patient_name" jdbcType="VARCHAR" property="patientName" />
    <result column="appointment_amount" jdbcType="INTEGER" property="appointmentAmount" />
    <result column="appointment_date" jdbcType="VARCHAR" property="appointmentDate" />
    <result column="appointment_time" jdbcType="VARCHAR" property="appointmentTime" />
    <result column="appointment_no" jdbcType="INTEGER" property="appointmentNo" />
    <result column="appointment_timeout" jdbcType="INTEGER" property="appointmentTimeout" />
    <result column="appointment_status" jdbcType="TINYINT" property="appointmentStatus" />
    <result column="office_id" jdbcType="BIGINT" property="officeId" />
    <result column="office_name" jdbcType="VARCHAR" property="officeName" />
    <result column="doctor_id" jdbcType="BIGINT" property="doctorId" />
    <result column="doctor_name" jdbcType="VARCHAR" property="doctorName" />
    <result column="doctor_title" jdbcType="VARCHAR" property="doctorTitle" />
    <result column="data_status" jdbcType="TINYINT" property="dataStatus" />
    <result column="createby" jdbcType="VARCHAR" property="createby" />
    <result column="buildtime" jdbcType="VARCHAR" property="buildtime" />
    <result column="his_result" jdbcType="VARCHAR" property="hisResult" />
    <result column="offertime" jdbcType="VARCHAR" property="offertime" />
    <result column="finishtime" jdbcType="VARCHAR" property="finishtime" />
    <result column="createtime" jdbcType="BIGINT" property="createtime" />
    <result column="updatetime" jdbcType="BIGINT" property="updatetime" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="doctor_appointment_record_id" jdbcType="BIGINT" property="doctorAppointmentRecordId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, weahan_code, organization_root_id, client_id, app_id, openid, patient_id, patient_name, 
    appointment_amount, appointment_date, appointment_time, appointment_no, appointment_timeout, 
    appointment_status, office_id, office_name, doctor_id, doctor_name, doctor_title, 
    data_status, createby, buildtime, his_result, offertime, finishtime, createtime, 
    updatetime, version, doctor_appointment_record_id
  </sql>
  <select id="selectByExample" parameterType="org.lemonframework.generator.sample.dao.model.AppointmentRecord1Example" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from appointment_record1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from appointment_record1
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from appointment_record1
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.lemonframework.generator.sample.dao.model.AppointmentRecord1Example">
    delete from appointment_record1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.lemonframework.generator.sample.dao.model.AppointmentRecord1">
    insert into appointment_record1 (id, weahan_code, organization_root_id, 
      client_id, app_id, openid, 
      patient_id, patient_name, appointment_amount, 
      appointment_date, appointment_time, appointment_no, 
      appointment_timeout, appointment_status, 
      office_id, office_name, doctor_id, 
      doctor_name, doctor_title, data_status, 
      createby, buildtime, his_result, 
      offertime, finishtime, createtime, 
      updatetime, version, doctor_appointment_record_id
      )
    values (#{id,jdbcType=BIGINT}, #{weahanCode,jdbcType=VARCHAR}, #{organizationRootId,jdbcType=BIGINT}, 
      #{clientId,jdbcType=INTEGER}, #{appId,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, 
      #{patientId,jdbcType=BIGINT}, #{patientName,jdbcType=VARCHAR}, #{appointmentAmount,jdbcType=INTEGER}, 
      #{appointmentDate,jdbcType=VARCHAR}, #{appointmentTime,jdbcType=VARCHAR}, #{appointmentNo,jdbcType=INTEGER}, 
      #{appointmentTimeout,jdbcType=INTEGER}, #{appointmentStatus,jdbcType=TINYINT}, 
      #{officeId,jdbcType=BIGINT}, #{officeName,jdbcType=VARCHAR}, #{doctorId,jdbcType=BIGINT}, 
      #{doctorName,jdbcType=VARCHAR}, #{doctorTitle,jdbcType=VARCHAR}, #{dataStatus,jdbcType=TINYINT}, 
      #{createby,jdbcType=VARCHAR}, #{buildtime,jdbcType=VARCHAR}, #{hisResult,jdbcType=VARCHAR}, 
      #{offertime,jdbcType=VARCHAR}, #{finishtime,jdbcType=VARCHAR}, #{createtime,jdbcType=BIGINT}, 
      #{updatetime,jdbcType=BIGINT}, #{version,jdbcType=BIGINT}, #{doctorAppointmentRecordId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.lemonframework.generator.sample.dao.model.AppointmentRecord1">
    insert into appointment_record1
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="weahanCode != null">
        weahan_code,
      </if>
      <if test="organizationRootId != null">
        organization_root_id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="patientId != null">
        patient_id,
      </if>
      <if test="patientName != null">
        patient_name,
      </if>
      <if test="appointmentAmount != null">
        appointment_amount,
      </if>
      <if test="appointmentDate != null">
        appointment_date,
      </if>
      <if test="appointmentTime != null">
        appointment_time,
      </if>
      <if test="appointmentNo != null">
        appointment_no,
      </if>
      <if test="appointmentTimeout != null">
        appointment_timeout,
      </if>
      <if test="appointmentStatus != null">
        appointment_status,
      </if>
      <if test="officeId != null">
        office_id,
      </if>
      <if test="officeName != null">
        office_name,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="doctorName != null">
        doctor_name,
      </if>
      <if test="doctorTitle != null">
        doctor_title,
      </if>
      <if test="dataStatus != null">
        data_status,
      </if>
      <if test="createby != null">
        createby,
      </if>
      <if test="buildtime != null">
        buildtime,
      </if>
      <if test="hisResult != null">
        his_result,
      </if>
      <if test="offertime != null">
        offertime,
      </if>
      <if test="finishtime != null">
        finishtime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="doctorAppointmentRecordId != null">
        doctor_appointment_record_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="weahanCode != null">
        #{weahanCode,jdbcType=VARCHAR},
      </if>
      <if test="organizationRootId != null">
        #{organizationRootId,jdbcType=BIGINT},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="patientId != null">
        #{patientId,jdbcType=BIGINT},
      </if>
      <if test="patientName != null">
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="appointmentAmount != null">
        #{appointmentAmount,jdbcType=INTEGER},
      </if>
      <if test="appointmentDate != null">
        #{appointmentDate,jdbcType=VARCHAR},
      </if>
      <if test="appointmentTime != null">
        #{appointmentTime,jdbcType=VARCHAR},
      </if>
      <if test="appointmentNo != null">
        #{appointmentNo,jdbcType=INTEGER},
      </if>
      <if test="appointmentTimeout != null">
        #{appointmentTimeout,jdbcType=INTEGER},
      </if>
      <if test="appointmentStatus != null">
        #{appointmentStatus,jdbcType=TINYINT},
      </if>
      <if test="officeId != null">
        #{officeId,jdbcType=BIGINT},
      </if>
      <if test="officeName != null">
        #{officeName,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="doctorName != null">
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="doctorTitle != null">
        #{doctorTitle,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null">
        #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="createby != null">
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="buildtime != null">
        #{buildtime,jdbcType=VARCHAR},
      </if>
      <if test="hisResult != null">
        #{hisResult,jdbcType=VARCHAR},
      </if>
      <if test="offertime != null">
        #{offertime,jdbcType=VARCHAR},
      </if>
      <if test="finishtime != null">
        #{finishtime,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="doctorAppointmentRecordId != null">
        #{doctorAppointmentRecordId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.lemonframework.generator.sample.dao.model.AppointmentRecord1Example" resultType="java.lang.Long">
    select count(*) from appointment_record1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update appointment_record1
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.weahanCode != null">
        weahan_code = #{record.weahanCode,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationRootId != null">
        organization_root_id = #{record.organizationRootId,jdbcType=BIGINT},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=INTEGER},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.patientId != null">
        patient_id = #{record.patientId,jdbcType=BIGINT},
      </if>
      <if test="record.patientName != null">
        patient_name = #{record.patientName,jdbcType=VARCHAR},
      </if>
      <if test="record.appointmentAmount != null">
        appointment_amount = #{record.appointmentAmount,jdbcType=INTEGER},
      </if>
      <if test="record.appointmentDate != null">
        appointment_date = #{record.appointmentDate,jdbcType=VARCHAR},
      </if>
      <if test="record.appointmentTime != null">
        appointment_time = #{record.appointmentTime,jdbcType=VARCHAR},
      </if>
      <if test="record.appointmentNo != null">
        appointment_no = #{record.appointmentNo,jdbcType=INTEGER},
      </if>
      <if test="record.appointmentTimeout != null">
        appointment_timeout = #{record.appointmentTimeout,jdbcType=INTEGER},
      </if>
      <if test="record.appointmentStatus != null">
        appointment_status = #{record.appointmentStatus,jdbcType=TINYINT},
      </if>
      <if test="record.officeId != null">
        office_id = #{record.officeId,jdbcType=BIGINT},
      </if>
      <if test="record.officeName != null">
        office_name = #{record.officeName,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=BIGINT},
      </if>
      <if test="record.doctorName != null">
        doctor_name = #{record.doctorName,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorTitle != null">
        doctor_title = #{record.doctorTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.dataStatus != null">
        data_status = #{record.dataStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createby != null">
        createby = #{record.createby,jdbcType=VARCHAR},
      </if>
      <if test="record.buildtime != null">
        buildtime = #{record.buildtime,jdbcType=VARCHAR},
      </if>
      <if test="record.hisResult != null">
        his_result = #{record.hisResult,jdbcType=VARCHAR},
      </if>
      <if test="record.offertime != null">
        offertime = #{record.offertime,jdbcType=VARCHAR},
      </if>
      <if test="record.finishtime != null">
        finishtime = #{record.finishtime,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=BIGINT},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=BIGINT},
      </if>
      <if test="record.version != null">
        version = 1 + #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.doctorAppointmentRecordId != null">
        doctor_appointment_record_id = #{record.doctorAppointmentRecordId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update appointment_record1
    set id = #{record.id,jdbcType=BIGINT},
      weahan_code = #{record.weahanCode,jdbcType=VARCHAR},
      organization_root_id = #{record.organizationRootId,jdbcType=BIGINT},
      client_id = #{record.clientId,jdbcType=INTEGER},
      app_id = #{record.appId,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      patient_id = #{record.patientId,jdbcType=BIGINT},
      patient_name = #{record.patientName,jdbcType=VARCHAR},
      appointment_amount = #{record.appointmentAmount,jdbcType=INTEGER},
      appointment_date = #{record.appointmentDate,jdbcType=VARCHAR},
      appointment_time = #{record.appointmentTime,jdbcType=VARCHAR},
      appointment_no = #{record.appointmentNo,jdbcType=INTEGER},
      appointment_timeout = #{record.appointmentTimeout,jdbcType=INTEGER},
      appointment_status = #{record.appointmentStatus,jdbcType=TINYINT},
      office_id = #{record.officeId,jdbcType=BIGINT},
      office_name = #{record.officeName,jdbcType=VARCHAR},
      doctor_id = #{record.doctorId,jdbcType=BIGINT},
      doctor_name = #{record.doctorName,jdbcType=VARCHAR},
      doctor_title = #{record.doctorTitle,jdbcType=VARCHAR},
      data_status = #{record.dataStatus,jdbcType=TINYINT},
      createby = #{record.createby,jdbcType=VARCHAR},
      buildtime = #{record.buildtime,jdbcType=VARCHAR},
      his_result = #{record.hisResult,jdbcType=VARCHAR},
      offertime = #{record.offertime,jdbcType=VARCHAR},
      finishtime = #{record.finishtime,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=BIGINT},
      updatetime = #{record.updatetime,jdbcType=BIGINT},
      version = 1 + #{record.version,jdbcType=BIGINT},
      doctor_appointment_record_id = #{record.doctorAppointmentRecordId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.lemonframework.generator.sample.dao.model.AppointmentRecord1">
    update appointment_record1
    <set>
      <if test="weahanCode != null">
        weahan_code = #{weahanCode,jdbcType=VARCHAR},
      </if>
      <if test="organizationRootId != null">
        organization_root_id = #{organizationRootId,jdbcType=BIGINT},
      </if>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="patientId != null">
        patient_id = #{patientId,jdbcType=BIGINT},
      </if>
      <if test="patientName != null">
        patient_name = #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="appointmentAmount != null">
        appointment_amount = #{appointmentAmount,jdbcType=INTEGER},
      </if>
      <if test="appointmentDate != null">
        appointment_date = #{appointmentDate,jdbcType=VARCHAR},
      </if>
      <if test="appointmentTime != null">
        appointment_time = #{appointmentTime,jdbcType=VARCHAR},
      </if>
      <if test="appointmentNo != null">
        appointment_no = #{appointmentNo,jdbcType=INTEGER},
      </if>
      <if test="appointmentTimeout != null">
        appointment_timeout = #{appointmentTimeout,jdbcType=INTEGER},
      </if>
      <if test="appointmentStatus != null">
        appointment_status = #{appointmentStatus,jdbcType=TINYINT},
      </if>
      <if test="officeId != null">
        office_id = #{officeId,jdbcType=BIGINT},
      </if>
      <if test="officeName != null">
        office_name = #{officeName,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="doctorName != null">
        doctor_name = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="doctorTitle != null">
        doctor_title = #{doctorTitle,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null">
        data_status = #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="createby != null">
        createby = #{createby,jdbcType=VARCHAR},
      </if>
      <if test="buildtime != null">
        buildtime = #{buildtime,jdbcType=VARCHAR},
      </if>
      <if test="hisResult != null">
        his_result = #{hisResult,jdbcType=VARCHAR},
      </if>
      <if test="offertime != null">
        offertime = #{offertime,jdbcType=VARCHAR},
      </if>
      <if test="finishtime != null">
        finishtime = #{finishtime,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        version = 1 + #{version,jdbcType=BIGINT},
      </if>
      <if test="doctorAppointmentRecordId != null">
        doctor_appointment_record_id = #{doctorAppointmentRecordId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lemonframework.generator.sample.dao.model.AppointmentRecord1">
    update appointment_record1
    set weahan_code = #{weahanCode,jdbcType=VARCHAR},
      organization_root_id = #{organizationRootId,jdbcType=BIGINT},
      client_id = #{clientId,jdbcType=INTEGER},
      app_id = #{appId,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      patient_id = #{patientId,jdbcType=BIGINT},
      patient_name = #{patientName,jdbcType=VARCHAR},
      appointment_amount = #{appointmentAmount,jdbcType=INTEGER},
      appointment_date = #{appointmentDate,jdbcType=VARCHAR},
      appointment_time = #{appointmentTime,jdbcType=VARCHAR},
      appointment_no = #{appointmentNo,jdbcType=INTEGER},
      appointment_timeout = #{appointmentTimeout,jdbcType=INTEGER},
      appointment_status = #{appointmentStatus,jdbcType=TINYINT},
      office_id = #{officeId,jdbcType=BIGINT},
      office_name = #{officeName,jdbcType=VARCHAR},
      doctor_id = #{doctorId,jdbcType=BIGINT},
      doctor_name = #{doctorName,jdbcType=VARCHAR},
      doctor_title = #{doctorTitle,jdbcType=VARCHAR},
      data_status = #{dataStatus,jdbcType=TINYINT},
      createby = #{createby,jdbcType=VARCHAR},
      buildtime = #{buildtime,jdbcType=VARCHAR},
      his_result = #{hisResult,jdbcType=VARCHAR},
      offertime = #{offertime,jdbcType=VARCHAR},
      finishtime = #{finishtime,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=BIGINT},
      updatetime = #{updatetime,jdbcType=BIGINT},
      version = 1 + #{version,jdbcType=BIGINT},
      doctor_appointment_record_id = #{doctorAppointmentRecordId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>