<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lemonframework.generator.sample.dao.mapper.TradeOrderRecord1Mapper">
  <resultMap id="BaseResultMap" type="org.lemonframework.generator.sample.dao.model.TradeOrderRecord1">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="chan_trade_no" jdbcType="VARCHAR" property="chanTradeNo" />
    <result column="partner_id" jdbcType="VARCHAR" property="partnerId" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="mch_id" jdbcType="VARCHAR" property="mchId" />
    <result column="chan_id" jdbcType="INTEGER" property="chanId" />
    <result column="chan_app_id" jdbcType="VARCHAR" property="chanAppId" />
    <result column="chan_subapp_id" jdbcType="VARCHAR" property="chanSubappId" />
    <result column="chan_mch_id" jdbcType="VARCHAR" property="chanMchId" />
    <result column="chan_submch_id" jdbcType="VARCHAR" property="chanSubmchId" />
    <result column="total_amount" jdbcType="INTEGER" property="totalAmount" />
    <result column="pay_mode" jdbcType="VARCHAR" property="payMode" />
    <result column="create_ip" jdbcType="VARCHAR" property="createIp" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="notify_url" jdbcType="VARCHAR" property="notifyUrl" />
    <result column="callbak_url" jdbcType="VARCHAR" property="callbakUrl" />
    <result column="chan_notify_url" jdbcType="VARCHAR" property="chanNotifyUrl" />
    <result column="attach" jdbcType="VARCHAR" property="attach" />
    <result column="service_code" jdbcType="VARCHAR" property="serviceCode" />
    <result column="bank_type" jdbcType="VARCHAR" property="bankType" />
    <result column="amount_type" jdbcType="VARCHAR" property="amountType" />
    <result column="device_info" jdbcType="VARCHAR" property="deviceInfo" />
    <result column="is_subscribe" jdbcType="CHAR" property="isSubscribe" />
    <result column="is_subscribe_sub" jdbcType="CHAR" property="isSubscribeSub" />
    <result column="order_create_time" jdbcType="TIMESTAMP" property="orderCreateTime" />
    <result column="pay_end_time" jdbcType="VARCHAR" property="payEndTime" />
    <result column="trade_status" jdbcType="TINYINT" property="tradeStatus" />
    <result column="data_status" jdbcType="TINYINT" property="dataStatus" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="createtime" jdbcType="BIGINT" property="createtime" />
    <result column="updatetime" jdbcType="BIGINT" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, trade_no, out_trade_no, chan_trade_no, partner_id, app_id, mch_id, chan_id, chan_app_id, 
    chan_subapp_id, chan_mch_id, chan_submch_id, total_amount, pay_mode, create_ip, open_id, 
    title, detail, notify_url, callbak_url, chan_notify_url, attach, service_code, bank_type, 
    amount_type, device_info, is_subscribe, is_subscribe_sub, order_create_time, pay_end_time, 
    trade_status, data_status, version, createtime, updatetime
  </sql>
  <select id="selectByExample" parameterType="org.lemonframework.generator.sample.dao.model.TradeOrderRecord1Example" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade_order_record1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade_order_record1
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trade_order_record1
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.lemonframework.generator.sample.dao.model.TradeOrderRecord1Example">
    delete from trade_order_record1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.lemonframework.generator.sample.dao.model.TradeOrderRecord1">
    insert into trade_order_record1 (id, trade_no, out_trade_no, 
      chan_trade_no, partner_id, app_id, 
      mch_id, chan_id, chan_app_id, 
      chan_subapp_id, chan_mch_id, chan_submch_id, 
      total_amount, pay_mode, create_ip, 
      open_id, title, detail, 
      notify_url, callbak_url, chan_notify_url, 
      attach, service_code, bank_type, 
      amount_type, device_info, is_subscribe, 
      is_subscribe_sub, order_create_time, pay_end_time, 
      trade_status, data_status, version, 
      createtime, updatetime)
    values (#{id,jdbcType=BIGINT}, #{tradeNo,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{chanTradeNo,jdbcType=VARCHAR}, #{partnerId,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, 
      #{mchId,jdbcType=VARCHAR}, #{chanId,jdbcType=INTEGER}, #{chanAppId,jdbcType=VARCHAR}, 
      #{chanSubappId,jdbcType=VARCHAR}, #{chanMchId,jdbcType=VARCHAR}, #{chanSubmchId,jdbcType=VARCHAR}, 
      #{totalAmount,jdbcType=INTEGER}, #{payMode,jdbcType=VARCHAR}, #{createIp,jdbcType=VARCHAR}, 
      #{openId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, 
      #{notifyUrl,jdbcType=VARCHAR}, #{callbakUrl,jdbcType=VARCHAR}, #{chanNotifyUrl,jdbcType=VARCHAR}, 
      #{attach,jdbcType=VARCHAR}, #{serviceCode,jdbcType=VARCHAR}, #{bankType,jdbcType=VARCHAR}, 
      #{amountType,jdbcType=VARCHAR}, #{deviceInfo,jdbcType=VARCHAR}, #{isSubscribe,jdbcType=CHAR}, 
      #{isSubscribeSub,jdbcType=CHAR}, #{orderCreateTime,jdbcType=TIMESTAMP}, #{payEndTime,jdbcType=VARCHAR}, 
      #{tradeStatus,jdbcType=TINYINT}, #{dataStatus,jdbcType=TINYINT}, #{version,jdbcType=INTEGER}, 
      #{createtime,jdbcType=BIGINT}, #{updatetime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.lemonframework.generator.sample.dao.model.TradeOrderRecord1">
    insert into trade_order_record1
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="chanTradeNo != null">
        chan_trade_no,
      </if>
      <if test="partnerId != null">
        partner_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="mchId != null">
        mch_id,
      </if>
      <if test="chanId != null">
        chan_id,
      </if>
      <if test="chanAppId != null">
        chan_app_id,
      </if>
      <if test="chanSubappId != null">
        chan_subapp_id,
      </if>
      <if test="chanMchId != null">
        chan_mch_id,
      </if>
      <if test="chanSubmchId != null">
        chan_submch_id,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="payMode != null">
        pay_mode,
      </if>
      <if test="createIp != null">
        create_ip,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="notifyUrl != null">
        notify_url,
      </if>
      <if test="callbakUrl != null">
        callbak_url,
      </if>
      <if test="chanNotifyUrl != null">
        chan_notify_url,
      </if>
      <if test="attach != null">
        attach,
      </if>
      <if test="serviceCode != null">
        service_code,
      </if>
      <if test="bankType != null">
        bank_type,
      </if>
      <if test="amountType != null">
        amount_type,
      </if>
      <if test="deviceInfo != null">
        device_info,
      </if>
      <if test="isSubscribe != null">
        is_subscribe,
      </if>
      <if test="isSubscribeSub != null">
        is_subscribe_sub,
      </if>
      <if test="orderCreateTime != null">
        order_create_time,
      </if>
      <if test="payEndTime != null">
        pay_end_time,
      </if>
      <if test="tradeStatus != null">
        trade_status,
      </if>
      <if test="dataStatus != null">
        data_status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="chanTradeNo != null">
        #{chanTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="partnerId != null">
        #{partnerId,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="chanId != null">
        #{chanId,jdbcType=INTEGER},
      </if>
      <if test="chanAppId != null">
        #{chanAppId,jdbcType=VARCHAR},
      </if>
      <if test="chanSubappId != null">
        #{chanSubappId,jdbcType=VARCHAR},
      </if>
      <if test="chanMchId != null">
        #{chanMchId,jdbcType=VARCHAR},
      </if>
      <if test="chanSubmchId != null">
        #{chanSubmchId,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="payMode != null">
        #{payMode,jdbcType=VARCHAR},
      </if>
      <if test="createIp != null">
        #{createIp,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="notifyUrl != null">
        #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="callbakUrl != null">
        #{callbakUrl,jdbcType=VARCHAR},
      </if>
      <if test="chanNotifyUrl != null">
        #{chanNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="attach != null">
        #{attach,jdbcType=VARCHAR},
      </if>
      <if test="serviceCode != null">
        #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null">
        #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="amountType != null">
        #{amountType,jdbcType=VARCHAR},
      </if>
      <if test="deviceInfo != null">
        #{deviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="isSubscribe != null">
        #{isSubscribe,jdbcType=CHAR},
      </if>
      <if test="isSubscribeSub != null">
        #{isSubscribeSub,jdbcType=CHAR},
      </if>
      <if test="orderCreateTime != null">
        #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payEndTime != null">
        #{payEndTime,jdbcType=VARCHAR},
      </if>
      <if test="tradeStatus != null">
        #{tradeStatus,jdbcType=TINYINT},
      </if>
      <if test="dataStatus != null">
        #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.lemonframework.generator.sample.dao.model.TradeOrderRecord1Example" resultType="java.lang.Long">
    select count(*) from trade_order_record1
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trade_order_record1
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.chanTradeNo != null">
        chan_trade_no = #{record.chanTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.mchId != null">
        mch_id = #{record.mchId,jdbcType=VARCHAR},
      </if>
      <if test="record.chanId != null">
        chan_id = #{record.chanId,jdbcType=INTEGER},
      </if>
      <if test="record.chanAppId != null">
        chan_app_id = #{record.chanAppId,jdbcType=VARCHAR},
      </if>
      <if test="record.chanSubappId != null">
        chan_subapp_id = #{record.chanSubappId,jdbcType=VARCHAR},
      </if>
      <if test="record.chanMchId != null">
        chan_mch_id = #{record.chanMchId,jdbcType=VARCHAR},
      </if>
      <if test="record.chanSubmchId != null">
        chan_submch_id = #{record.chanSubmchId,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=INTEGER},
      </if>
      <if test="record.payMode != null">
        pay_mode = #{record.payMode,jdbcType=VARCHAR},
      </if>
      <if test="record.createIp != null">
        create_ip = #{record.createIp,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyUrl != null">
        notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.callbakUrl != null">
        callbak_url = #{record.callbakUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.chanNotifyUrl != null">
        chan_notify_url = #{record.chanNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.attach != null">
        attach = #{record.attach,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceCode != null">
        service_code = #{record.serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankType != null">
        bank_type = #{record.bankType,jdbcType=VARCHAR},
      </if>
      <if test="record.amountType != null">
        amount_type = #{record.amountType,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceInfo != null">
        device_info = #{record.deviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.isSubscribe != null">
        is_subscribe = #{record.isSubscribe,jdbcType=CHAR},
      </if>
      <if test="record.isSubscribeSub != null">
        is_subscribe_sub = #{record.isSubscribeSub,jdbcType=CHAR},
      </if>
      <if test="record.orderCreateTime != null">
        order_create_time = #{record.orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payEndTime != null">
        pay_end_time = #{record.payEndTime,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeStatus != null">
        trade_status = #{record.tradeStatus,jdbcType=TINYINT},
      </if>
      <if test="record.dataStatus != null">
        data_status = #{record.dataStatus,jdbcType=TINYINT},
      </if>
      <if test="record.version != null">
        version = 1 + #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=BIGINT},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trade_order_record1
    set id = #{record.id,jdbcType=BIGINT},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      chan_trade_no = #{record.chanTradeNo,jdbcType=VARCHAR},
      partner_id = #{record.partnerId,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      mch_id = #{record.mchId,jdbcType=VARCHAR},
      chan_id = #{record.chanId,jdbcType=INTEGER},
      chan_app_id = #{record.chanAppId,jdbcType=VARCHAR},
      chan_subapp_id = #{record.chanSubappId,jdbcType=VARCHAR},
      chan_mch_id = #{record.chanMchId,jdbcType=VARCHAR},
      chan_submch_id = #{record.chanSubmchId,jdbcType=VARCHAR},
      total_amount = #{record.totalAmount,jdbcType=INTEGER},
      pay_mode = #{record.payMode,jdbcType=VARCHAR},
      create_ip = #{record.createIp,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=VARCHAR},
      notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      callbak_url = #{record.callbakUrl,jdbcType=VARCHAR},
      chan_notify_url = #{record.chanNotifyUrl,jdbcType=VARCHAR},
      attach = #{record.attach,jdbcType=VARCHAR},
      service_code = #{record.serviceCode,jdbcType=VARCHAR},
      bank_type = #{record.bankType,jdbcType=VARCHAR},
      amount_type = #{record.amountType,jdbcType=VARCHAR},
      device_info = #{record.deviceInfo,jdbcType=VARCHAR},
      is_subscribe = #{record.isSubscribe,jdbcType=CHAR},
      is_subscribe_sub = #{record.isSubscribeSub,jdbcType=CHAR},
      order_create_time = #{record.orderCreateTime,jdbcType=TIMESTAMP},
      pay_end_time = #{record.payEndTime,jdbcType=VARCHAR},
      trade_status = #{record.tradeStatus,jdbcType=TINYINT},
      data_status = #{record.dataStatus,jdbcType=TINYINT},
      version = 1 + #{record.version,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=BIGINT},
      updatetime = #{record.updatetime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.lemonframework.generator.sample.dao.model.TradeOrderRecord1">
    update trade_order_record1
    <set>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="chanTradeNo != null">
        chan_trade_no = #{chanTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="partnerId != null">
        partner_id = #{partnerId,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        mch_id = #{mchId,jdbcType=VARCHAR},
      </if>
      <if test="chanId != null">
        chan_id = #{chanId,jdbcType=INTEGER},
      </if>
      <if test="chanAppId != null">
        chan_app_id = #{chanAppId,jdbcType=VARCHAR},
      </if>
      <if test="chanSubappId != null">
        chan_subapp_id = #{chanSubappId,jdbcType=VARCHAR},
      </if>
      <if test="chanMchId != null">
        chan_mch_id = #{chanMchId,jdbcType=VARCHAR},
      </if>
      <if test="chanSubmchId != null">
        chan_submch_id = #{chanSubmchId,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=INTEGER},
      </if>
      <if test="payMode != null">
        pay_mode = #{payMode,jdbcType=VARCHAR},
      </if>
      <if test="createIp != null">
        create_ip = #{createIp,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="notifyUrl != null">
        notify_url = #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="callbakUrl != null">
        callbak_url = #{callbakUrl,jdbcType=VARCHAR},
      </if>
      <if test="chanNotifyUrl != null">
        chan_notify_url = #{chanNotifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="attach != null">
        attach = #{attach,jdbcType=VARCHAR},
      </if>
      <if test="serviceCode != null">
        service_code = #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="bankType != null">
        bank_type = #{bankType,jdbcType=VARCHAR},
      </if>
      <if test="amountType != null">
        amount_type = #{amountType,jdbcType=VARCHAR},
      </if>
      <if test="deviceInfo != null">
        device_info = #{deviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="isSubscribe != null">
        is_subscribe = #{isSubscribe,jdbcType=CHAR},
      </if>
      <if test="isSubscribeSub != null">
        is_subscribe_sub = #{isSubscribeSub,jdbcType=CHAR},
      </if>
      <if test="orderCreateTime != null">
        order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payEndTime != null">
        pay_end_time = #{payEndTime,jdbcType=VARCHAR},
      </if>
      <if test="tradeStatus != null">
        trade_status = #{tradeStatus,jdbcType=TINYINT},
      </if>
      <if test="dataStatus != null">
        data_status = #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="version != null">
        version = 1 + #{version,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lemonframework.generator.sample.dao.model.TradeOrderRecord1">
    update trade_order_record1
    set trade_no = #{tradeNo,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      chan_trade_no = #{chanTradeNo,jdbcType=VARCHAR},
      partner_id = #{partnerId,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      mch_id = #{mchId,jdbcType=VARCHAR},
      chan_id = #{chanId,jdbcType=INTEGER},
      chan_app_id = #{chanAppId,jdbcType=VARCHAR},
      chan_subapp_id = #{chanSubappId,jdbcType=VARCHAR},
      chan_mch_id = #{chanMchId,jdbcType=VARCHAR},
      chan_submch_id = #{chanSubmchId,jdbcType=VARCHAR},
      total_amount = #{totalAmount,jdbcType=INTEGER},
      pay_mode = #{payMode,jdbcType=VARCHAR},
      create_ip = #{createIp,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      notify_url = #{notifyUrl,jdbcType=VARCHAR},
      callbak_url = #{callbakUrl,jdbcType=VARCHAR},
      chan_notify_url = #{chanNotifyUrl,jdbcType=VARCHAR},
      attach = #{attach,jdbcType=VARCHAR},
      service_code = #{serviceCode,jdbcType=VARCHAR},
      bank_type = #{bankType,jdbcType=VARCHAR},
      amount_type = #{amountType,jdbcType=VARCHAR},
      device_info = #{deviceInfo,jdbcType=VARCHAR},
      is_subscribe = #{isSubscribe,jdbcType=CHAR},
      is_subscribe_sub = #{isSubscribeSub,jdbcType=CHAR},
      order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
      pay_end_time = #{payEndTime,jdbcType=VARCHAR},
      trade_status = #{tradeStatus,jdbcType=TINYINT},
      data_status = #{dataStatus,jdbcType=TINYINT},
      version = 1 + #{version,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=BIGINT},
      updatetime = #{updatetime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>